package client.gui.languages;

import java.util.ListResourceBundle;

public class Bundle_en_AU extends ListResourceBundle {
    @Override
    protected Object[][] getContents() {
        return new Object[][] {
                {"loginField", "Login"},
                {"passwordField", "Password"},
                {"nicknameField", "Nickname"},
                {"loginButton", "LOGIN"},
                {"registerButton", "CREATE NEW ACCOUNT"},
                {"createNewAccountButton", "Create new account"},
                {"signInLabel", "Sign in"},
                {"signUpLabel", "Sign up"},
                {"welcomeLabel", "Welcome,"},
                {"loadingLabel", "Loading collection..."},

                {"idColumn", "ID"},
                {"nameColumn", "NAME"},
                {"dateColumn", "CREATION DATE"},
                {"xColumn", "X"},
                {"yColumn", "Y"},
                {"climateColumn", "CLIMATE"},
                {"governmentColumn", "GOVERNMENT"},
                {"capitalColumn", "CAPITAL?"},
                {"clientIdColumn", "CLIENT ID"},
                {"seaMetersColumn", "SEA METERS"},
                {"populationColumn", "POPULATION"},
                {"areaColumn", "AREA"},
                {"nameGColumn","GOVERNOR'S NAME"},
                {"ageGColumn","GOVERNOR'S AGE"},
                {"heightGColumn","GOVERNOR'S HEIGHT"},

                {"createNewCityLabel", "Create a new city"},
                {"editOrDelete", "Edit or delete your city"},
                {"enterName", "Enter name"},
                {"enterX", "Enter x"},
                {"enterY", "Enter y"},
                {"enterArea", "Enter area"},
                {"enterPopulation", "Enter population"},
                {"enterSeaMeters", "Enter sea level"},
                {"enterNameG", "Enter governor's name"},
                {"enterAgeG", "Enter governor's age"},
                {"enterHeightG", "Enter governor's height"},
                {"chooseClimate", "Choose climate"},
                {"chooseGovernment", "Choose government"},
                {"chooseCapital", "Is city a capital?"},

                {"information", "Information"},
                {"editButton", "Edit"},
                {"addButton", "Add"},
                {"add","Add"},
                {"edit","Edit"},
                {"removeButton", "Remove"},
                {"clearButton", "Clear"},
                {"cancelButton", "Cancel"},
                {"success", "Success"},
                {"successOfEdit", "City edited"},
                {"successOfEditMessage", "City was edited successfully"},
                {"editError", "Edit error"},
                {"deleteSuccessMessage", "City was deleted successfully"},
                {"error", "Error"},
                {"clearError", "Clear error"},
                {"addError", "Add error"},
                {"addIfMinError","AddIfMin error"},
                {"noElementsToDelete", "There are no your cities in collection"},
                {"unknownError", "How did you do this?! It's an unknown error! Congrats!"},
                {"confirmation", "Confirmation"},
                {"confirmationOfDelete","Confirmation of delete"},
                {"confirmationOfDeleteMessage", "Do you really want to delete this city?"},
                {"confirmationOfClear", "Confirmation of clear"},
                {"confirmationOfClearMessage", "Do you really want to delete all your cities?"},

                {"nameFillError", "Name has to be entered\n"},
                {"areaFillError", "Area has to be a number\n"},
                {"climateFillError", "Climate has to be chosen\n"},
                {"governmentFillError", "Government has to be chosen\n"},
                {"xFillError", "X has to be a number\n"},
                {"yFillError", "Y has to be an integer\n"},
                {"populationFillError", "Population has to be a number\n"},
                {"seaMetersFillError", "Sea meters has to be an integer\n"},
                {"nameGFillError", "Governor's name has to be entered\n"},
                {"ageGFillError", "Governor's age has to be a number\n"},
                {"heightGFillError", "Governor's height has to be a number\n"},
                {"capitalFillError", "Capital has to be chosen\n"},
                {"registerErrorAlreadyExists", "Login is already exists"},
                {"loginErrorEmptyField", "All fields must be entered"},
                {"loginErrorIncorrectField", "Incorrect login or password"},
                {"searchButton", "Search"},

                {"addIfMin", "Try add if min"},
                {"deleteSuccess", "Delete success"},
                {"clearSuccess", "All your cities were deleted"},
                {"addIfMinAnswerNotMin", "Entered city is not minimal"},
                {"addSuccess", "City successfully added"},
                {"addIfMinSuccess", "Entered city is minimal so it was added into collection"},
                {"getUniqueMinimalPointAnswerEmpty", "Collection is empty"},
                {"serverDead", "Server is dead"},
                {"serverDeadMessage", "Server is not working now. \nTry again later."},
                {"incorrectData", "You entered an incorrect data. Check your parameters and try again."},
                {"", ""},
        };
    }
}